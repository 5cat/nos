package plan

import "github.com/nebuly-ai/nebulnetes/pkg/gpu/mig"

type CreateOperation struct {
	// MigProfile corresponds to the profile(s) that need to be created
	MigProfile mig.Profile
	// Quantity is the amount of MigProfiles that need to be created
	Quantity int
}

type DeleteOperation struct {
	// Resources are the MIG resources that needs to be deleted
	Resources mig.DeviceResourceList
}

func (o DeleteOperation) GetMigProfileName() mig.ProfileName {
	if len(o.Resources) > 0 {
		return o.Resources[0].GetMigProfileName()
	}
	return ""
}

// OperationStatus represents the outcome of the execution of an operation
type OperationStatus struct {
	// PluginRestartRequired indicates if the operation execution requires the NVIDIA device plugin to be restarted
	PluginRestartRequired bool
	// Err corresponds to any error generated by the operation execution
	Err error
}

type CreateOperationList []CreateOperation

func (c CreateOperationList) Flatten() mig.ProfileList {
	res := make(mig.ProfileList, 0)
	for _, op := range c {
		for i := 0; i < op.Quantity; i++ {
			res = append(res, op.MigProfile)
		}
	}
	return res
}

type DeleteOperationList []DeleteOperation

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mighandler
spec:
  selector:
    matchLabels:
      name: mighandler
  template:
    metadata:
      labels:
        name: mighandler
    spec:
      nodeSelector:
        nvidia.com/mig.strategy: mixed
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      containers:
        - name: manager
          image: mighandler:latest
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          resources:
            limits:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: device-plugin
              mountPath: /var/lib/kubelet/pod-resources/kubelet.sock
            - name: run-nvidia
              mountPath: /run/nvidia
              mountPropagation: HostToContainer
          # TODO: add probes
      terminationGracePeriodSeconds: 30
      serviceAccountName: mighandler
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/pod-resources/kubelet.sock
        - name: run-nvidia
          hostPath:
            path: /run/nvidia
            type: Directory

//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright Nebuly.ai.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta3

import (
	scheduler "github.com/nebuly-ai/nebulnetes/pkg/api/scheduler"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*CapacitySchedulingArgs)(nil), (*scheduler.CapacitySchedulingArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta3_CapacitySchedulingArgs_To_scheduler_CapacitySchedulingArgs(a.(*CapacitySchedulingArgs), b.(*scheduler.CapacitySchedulingArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*scheduler.CapacitySchedulingArgs)(nil), (*CapacitySchedulingArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_scheduler_CapacitySchedulingArgs_To_v1beta3_CapacitySchedulingArgs(a.(*scheduler.CapacitySchedulingArgs), b.(*CapacitySchedulingArgs), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta3_CapacitySchedulingArgs_To_scheduler_CapacitySchedulingArgs(in *CapacitySchedulingArgs, out *scheduler.CapacitySchedulingArgs, s conversion.Scope) error {
	if err := v1.Convert_Pointer_int64_To_int64(&in.NvidiaGpuResourceMemoryGB, &out.NvidiaGpuResourceMemoryGB, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta3_CapacitySchedulingArgs_To_scheduler_CapacitySchedulingArgs is an autogenerated conversion function.
func Convert_v1beta3_CapacitySchedulingArgs_To_scheduler_CapacitySchedulingArgs(in *CapacitySchedulingArgs, out *scheduler.CapacitySchedulingArgs, s conversion.Scope) error {
	return autoConvert_v1beta3_CapacitySchedulingArgs_To_scheduler_CapacitySchedulingArgs(in, out, s)
}

func autoConvert_scheduler_CapacitySchedulingArgs_To_v1beta3_CapacitySchedulingArgs(in *scheduler.CapacitySchedulingArgs, out *CapacitySchedulingArgs, s conversion.Scope) error {
	if err := v1.Convert_int64_To_Pointer_int64(&in.NvidiaGpuResourceMemoryGB, &out.NvidiaGpuResourceMemoryGB, s); err != nil {
		return err
	}
	return nil
}

// Convert_scheduler_CapacitySchedulingArgs_To_v1beta3_CapacitySchedulingArgs is an autogenerated conversion function.
func Convert_scheduler_CapacitySchedulingArgs_To_v1beta3_CapacitySchedulingArgs(in *scheduler.CapacitySchedulingArgs, out *CapacitySchedulingArgs, s conversion.Scope) error {
	return autoConvert_scheduler_CapacitySchedulingArgs_To_v1beta3_CapacitySchedulingArgs(in, out, s)
}

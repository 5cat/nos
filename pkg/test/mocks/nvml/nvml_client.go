/*
 * Copyright 2022 Nebuly.ai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	gpu "github.com/nebuly-ai/nebulnetes/pkg/gpu"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// CreateMigDevices provides a mock function with given fields: migProfileNames, gpuIndex
func (_m *Client) CreateMigDevices(migProfileNames []string, gpuIndex int) gpu.Error {
	ret := _m.Called(migProfileNames, gpuIndex)

	var r0 gpu.Error
	if rf, ok := ret.Get(0).(func([]string, int) gpu.Error); ok {
		r0 = rf(migProfileNames, gpuIndex)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gpu.Error)
		}
	}

	return r0
}

// DeleteMigDevice provides a mock function with given fields: id
func (_m *Client) DeleteMigDevice(id string) gpu.Error {
	ret := _m.Called(id)

	var r0 gpu.Error
	if rf, ok := ret.Get(0).(func(string) gpu.Error); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gpu.Error)
		}
	}

	return r0
}

// GetGpuIndex provides a mock function with given fields: migDeviceId
func (_m *Client) GetGpuIndex(migDeviceId string) (int, gpu.Error) {
	ret := _m.Called(migDeviceId)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(migDeviceId)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 gpu.Error
	if rf, ok := ret.Get(1).(func(string) gpu.Error); ok {
		r1 = rf(migDeviceId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(gpu.Error)
		}
	}

	return r0, r1
}

// GetMigEnabledGPUs provides a mock function with given fields:
func (_m *Client) GetMigEnabledGPUs() ([]int, gpu.Error) {
	ret := _m.Called()

	var r0 []int
	if rf, ok := ret.Get(0).(func() []int); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]int)
		}
	}

	var r1 gpu.Error
	if rf, ok := ret.Get(1).(func() gpu.Error); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(gpu.Error)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    control-plane: n8s-controller-manager
    {{- include "time-slicing-agent.labels" . | nindent 4 }}
  name: {{ include "time-slicing-agent.name" . }}
spec:
  selector:
    matchLabels:
      control-plane: n8s-controller-manager
      {{- include "time-slicing-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: n8s-controller-manager
        {{- include "time-slicing-agent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "time-slicing-agent.name" . }}
      nodeSelector:
        n8s.nebuly.ai/gpu-partitioning: time-slicing
      priorityClassName: system-node-critical
      terminationGracePeriodSeconds: 20
      containers:
        - image: "{{ .Values.timeSlicingAgent.image.repository }}:{{ .Values.timeSlicingAgent.image.tag | default .Chart.AppVersion }}"
          name: {{ include "time-slicing-agent.name" . }}
          args:
            - --config={{ include "time-slicing-agent.configFileName" . }}
            {{- if gt (int .Values.timeSlicingAgent.logLevel) 0 }}
            - --zap-log-level={{ .Values.timeSlicingAgent.logLevel }}
            {{ end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.timeSlicingAgent.resources | nindent 12 }}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /{{ include "time-slicing-agent.configFileName" . }}
              name: time-slicing-agent-config
              subPath: {{ include "time-slicing-agent.configFileName" . }}
            - mountPath: /var/lib/kubelet/pod-resources/kubelet.sock
              name: device-plugin
            - mountPath: /run/nvidia
              mountPropagation: HostToContainer
              name: run-nvidia

        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            {{- if gt (int .Values.kubeRbacProxy.logLevel) 0 }}
            - --v={{ .Values.kubeRbacProxy.logLevel }}
            {{ end }}
          image: "{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources: {{- toYaml .Values.kubeRbacProxy.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
          {{- with .Values.tolerations }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
      volumes:
        - configMap:
            name: {{ include "time-slicing-agent.config.configMapName" . }}
          name: time-slicing-agent-config
        - hostPath:
            path: /var/lib/kubelet/pod-resources/kubelet.sock
          name: device-plugin
        - hostPath:
            path: /run/nvidia
            type: Directory
          name: run-nvidia
